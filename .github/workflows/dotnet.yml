name: .NET & Deploy Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NuGetDirectory: ${{ github.workspace}}/nuget


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
  test:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
    - uses: actions/checkout@v3
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
  create_package:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v3

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      
    - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}
    
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    runs-on: ubuntu-latest
    needs: [ create_package ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: Publish to NuGet
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
          
      - name: Publish to Github Packages
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.PACKAGES_APIKEY }}" --sourcehttps://nuget.pkg.github.com/joerivanarkel/index.json --skip-duplicate
          }
